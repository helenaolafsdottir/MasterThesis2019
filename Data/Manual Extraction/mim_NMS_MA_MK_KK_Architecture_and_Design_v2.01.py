# -*- coding: utf-8 -*-
"""
Created on Wed Jan 23 10:17:19 2019

@author: Lenovo
"""


{'h1': '', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}
{'h2': '', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}
{'h3': '', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}
{'h4': '', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}

sections  = [{'h1': '1 Introduction  ', 'pages': [], 'paragraphs':[['National MOTECH System (NMS) is a system that shall deliver three maternal and child health IVR services, namely Mobile Kunji, Mobile Academy and Kilkari; at a pan India level via a Toll Free, centralized long-code. '],['• Mobile Academy service is an inbound IVR mobile training course on reproductive, maternal, newborn and child health (RMNCH) for Front Line Workers (FLWs), designed to expand their knowledge of life-saving preventative health and enhance their capacity to communicate and engage effectively with families. ','FLWs can access the course from any phone by dialing a toll free long code, and complete it at their convenience.'],['• Mobile Kunji service includes an IVR based mobile service and a printed deck of illustrated cards on a ring, which together communicate essential audio-visual information on pregnancy and newborn health. ','Each card carries a unique long code and a card number printed on it.',' User has to dial the long code and enter the card number to access the specific audio content.',' Mobile Kunji is designed for use during counseling sessions with families and seeks to build support for healthy practices within families and communities.'],['• Kilkari service is an IVR subscription service that delivers time-sensitive audio information about maternal and child health to the mobile phones of husbands, their pregnant wives, and mothers of young children for upto 72 weeks, linked to the woman’s stage of pregnancy or and child’s age. ','The service covers the critical time period – where the most deaths occur - from the 2nd trimester of pregnancy until the child is one year old.'],['IVR services shall be powered by an open-source platform called MOTECH (Mobile Technology for Community Health). ','The MOTECH platform has been developed by the Grameen Foundation, a not-for-profit organization headquartered in the United States. ','The MOTECH platform combines the integration capabilities of an Enterprise Service Bus (ESB) with a flexible open source application development framework. ']], 'sub-sections': [
                {'h2': '1.1 Overview ', 'pages': [], 'paragraphs':[['This document provides an architectural overview of the Mobile Academy, Mobile Kunji, and Kilkari services, using a number of different architectural views to depict different aspects of the system.',' It is intended to capture and convey the decisions which have been made while designing the system']], 'sub-sections': []},
                {'h2': '1.2 Purpose ', 'pages': [], 'paragraphs':[['Scope of this document is to capture the high level design of Mobile Academy, Mobile Kunji, and Kilkari services.'],['The document is being written in phases. ','Design of the User Stories contained in each Sprint shall be added incrementally to this document.']], 'sub-sections': []},
                {'h2': '1.3 Scope ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
             {'h1': '2 Architecture Overview ', 'pages': [], 'paragraphs':[['The following diagram presents the logical view of the NMS Mobile Academy, Mobile Kunji and Kilkari services software:']], 'sub-sections': [
                     {'h2': '2.1 Interface Layer ', 'pages': [], 'paragraphs':[['MOTECH Mobile Kunji, Mobile Academy and Kilkari Service SW provides the user interfaces to perform various functionalities – e.g. upload master data, administers to configure, view and modify parameters, to define filters and generate different reports among others: '],['• Data Upload Interface:',' Provides an interface to the NMS administrators for uploading the following data among others into the NMS database:-',' o Master location data:',' the list of States, Districts, Taluka, Blocks, Health Facility (PHC/CHC), Sub-center & Village.',' o FLW Data: ','the registration details (MSISDN, Name, Designation & location data) of the FLWs.',' o MCTS data: ','the womans Last Menstrual Period (LMP) or the childs data of birth (DOB).',' o State-Language Mapping: ','The mapping between states and languages. '],['The Data Upload User Interface design is described in section 11.2. '],['• Configuration Interface: ','Provides an interface to administrators for viewing and modifying NMS configuration parameters that includes :',' o System Parameters (e.g. IP address, DB location, FTP/SFTP parameters)',' o Business Logic parameters related to NMS service (e.g. Capping rules, Language settings, etc.)'],['The Configuration User Interface design is described in section 11.111.110.1. '],['• Reports Interface:',' Pulls data from MOTECH to deliver online, real time reports on the take up and usage of MK, MA and Kilkari services. ','Reports Interface design is described in section 11.3. '],['• IVR Interface:',' MA, MK and Kilkari services provide an HTTP request-response based interface towards IVR.']], 'sub-sections': []},
                     {'h2': '2.2 Business Layer ', 'pages': [], 'paragraphs':[['The Business Layer consists of Mobile Academy, Mobile Kunji and Kilkari business logic for providing the maternal and child health IVR services:- '],['• Mobile Academy service is an inbound IVR mobile training course on reproductive, maternal, newborn and child health (RMNCH) for Front Line Workers (FLWs), designed to expand their knowledge of life-saving preventative health and enhance their capacity to communicate and engage effectively with families.',' FLWs can access the course from any phone by dialing a toll free long code, and complete it at their convenience.'],['Mobile Academy design and use cases are described in section 3. '],['• Mobile Kunji service includes an IVR based mobile service using a long code and a printed deck of illustrated cards on a ring, which together communicate essential audiovisual information on pregnancy and newborn health. ','Each card carries a unique card number printed on it. User has to dial the Mobile Kunji long code and enter the card number to access the specific audio content. ','Mobile Kunji is designed for use during counseling sessions with families and seeks to build support for healthy practices within families and communities. '],['Mobile Kunji design and use cases are described in section4. '],['• Kilkari service is an IVR subscription service that delivers time-sensitive audio information about maternal and child health to the mobile phones of husbands, their pregnant wives, and mothers of young children for upto 72 weeks, linked to the woman’s stage of pregnancy or and child’s age.',' The service covers the critical time period – where the most deaths occur - from the 2nd trimester of pregnancy until the child is one year old. '],['Kilkari Service design is described in section 5 and 6 '],['Additionally, some of the logic common to the services shall be implemented in the following modules ','• Master Location Data:',' This module shall provide APIs to MA, MK and Kilkari for retrieving location related information. ','Refer section 6 for details.',' • Front Line Worker:',' This module shall provide APIs to MA, MK for retrieving and updating common FLW parameters. ','Refer section 8 for details.',' • Utility: ','This module shall provide APIs to MA, MK and Kilkari for common tasks such as data validation and logging CSV upload status.',' Refer section 9 for details.']], 'sub-sections': []},
                     {'h2': '2.3 Base Layer – MOTECH Platform components', 'pages': [], 'paragraphs':[['MA, MK, Kilkari services are built on top of Mobile Technology for Community Health (MOTECH) Platform.'],['MOTECH platform wraps several well-known open source systems, and augments and exposes their features to the other components.',' The main functions of the core are to wrap ActiveMQ (which provides the message queue) and present an internal pub/sub like event interface to the module and implementation layers. ','The core also provides a module loading environment (OSGi), an interface to the Scheduler, and access to the database.  '],['MA, MK, Kilkari modules within MOTECH are self-contained bits of functionality that are loaded into the server via the OSGi host. '],['MOTECH is designed to be horizontally scalable with multiple MOTECHs all acting as workers connecting to the same message queue. ','A core design principle of the MOTECH platform is that the server should be stateless across requests to allow for horizontal scalability. ','It is expected that code running within the MOTECH server should perform a single action per request and then return. ','The module should never persist any state in memory or local disk and expect that state to be available to later requests. '],['MA, MK, Kilkari services shall use the following MOTECH Platform Modules:- '],['• Events:  To aid in the development of stateless services, the MOTECH engine provides a pub/sub like event system. ','(The event system follows the publish-subscribe pattern but does not implement the standard Java pub/sub protocol.)',' It helps to decouple emitters of events from the modules that wish to consume them.  '],['• Scheduled Events & Timers:',' To assist in the development of a stateless event-based server, the MOTECH platform provides access to a flexible scheduling system. ','Using the open source Quartz engine, MOTECH can easily schedule events for future consumption. '],['• MOTECH Data Services (MDS): ','MOTECH Data Services is a flexible data modeling system that allows users to define and share custom schemas without code, and provides auditing and revision tracking.',' It is a JDBC-based user configurable database abstraction layer on top of a standard SQL database. ','It provides generated POJOs and OSGi service interfaces for the data objects, generated CRUD events, and generated user interface for data browsing and editing.',' In a future release it will also support auto-generation of REST APIs. '],['• mTraining: ','Provides data containers and APIs for defining mobile (e.g. SMS or IVR-based) training courses and tracking user enrollment and progress '],['• SMS:',' Provides a basic specification for integrating the MOTECH platform with an SMS provider to send/receive SMS messages'],['• Email: ','Provides APIs for sending and logging email messages. ']], 'sub-sections': []},
                     {'h2': '2.4 Data Layer', 'pages': [], 'paragraphs':[['MySQL shall be used for storing MA, MK, Kilkari data as well as data required for generation of reports.'],['Database design is described in section 10. ']], 'sub-sections': []}]},
             {'h1': '3 Mobile Academy Module ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '3.1 Overview ', 'pages': [], 'paragraphs':[['Mobile Academy (MA) service enables a Front Line Worker (FLW) to take up a health course. ','When a user dials the MA long code from her mobile phone, the call lands at IVR.',' MA exposes various web APIs which are invoked by IVR for data exchange and to facilitate the user to take MA course.'],['Following database entities are used by MA for providing service to FLW users:',' • Configuration (refer 10.1.5.1) ','• Content Data (refer 10.1.5.2)',' • Course Content (refer 10.1.5.3) ','• FLW Usage Data (refer 10.1.5.4) ','• Call Details (refer 10.1.5.5) ','• Content logs (refer ) ']], 'sub-sections': []},
                     {'h2': '3.2 Events Consumed ', 'pages': [], 'paragraphs':[['Mobile Academy subscribes to receive events for the following topics']], 'sub-sections': [
                             {'h3': '3.2.1 Course Content CSV Upload Success  ', 'pages': [], 'paragraphs':[['• NMS Administrator/Support Person shall upload MA Content Data into NMS via the NMS Web Interface.  ','The CSV file provided by NMS Support person shall be uploaded into a temporary table. ','Once the CSV file is uploaded, MOTECH Platform shall generate this event which shall be received by MA Event Handler. ','Refer section 11.2'],['• On receiving this event, ','o MA shall check if MA course structure is already available in mTraining. ','If it is not available then MA course structure shall be created in mTraining as described in section 3.2.1.1 ','o Subsequently, the records in the temporary table shall be processed and the MA Content Tables shall be populated as described in section 3.2.1.2. ','o Records once processed are deleted from the temporary table. ','o If Validation of ChildCsv record fails or it’s mapping to Subscriber entity fails or record is rejected during processing , then Kilkari shall create an error log entry in BulkUploadError entity with erroneous record details and error reason using API detailed in 9.2.1.1. ','o After the processing of all csv uploaded records, Kilkari shall update the CSV Upload summary in BullkUploadStatus entity. Kilakri shall use the API detailed in 9.2.1.2. ']], 'sub-sections': [
                                     {'h4': '3.2.1.1 mTraining Course Structure Population ', 'pages': [], 'paragraphs':[['• MA Course shall have 11 Chapters each having 4 Lessons and 4 Questions. ','There shall be constants defined in MA module for number of Chapter, Lessons and questions.',' These constants shall be used for populating the course structure in mTraining using mTraining service APIs. '],['• MA shall generate names of these chapters, lessons and questions and shall create course structure in mTraining tables (using mTraining APIs). '],['• The naming convention for content will be as follows: ','o Chapter – Chapter<index no.> eg. Chapter01, Chapter02,…..,Chapter11 ','o Lesson – Lessons<index no.> eg. Lesson01, Lesson02,….., Lesson04',' o Questions – Question<index no.> eg. Question01, Question02,…,Question04',' o Quiz – Quiz '],['• Once the course is created in mTraining tables, its state will be marked as INACTIVE']], 'sub-sections': []},
                                     {'h4': '3.2.1.2 Content Data Population ', 'pages': [], 'paragraphs':[['• MA shall read each record from CSV upload table and shall validate it as per rules given in 11.2.8.4. '],['• The validation and bulk upload error handling is done using the ParseDataHelper and BulkUploadError services respectively. ','These services are provided by Utilities module (refer 9.2.2, 9.2.1). '],['• If the LLC in record is already found in Content Data table then record is considered as modification record else it is considered as record for addition.'],['• In case of addition, it will also be validated that the CSV contains complete set of records for entire course for a particular LLC. ','Else that LLC will be rejected.',' On successful validation, a new record shall be created in Content Data Table (refer 10.1.5.2) which will be a copy of record in temporary table.',' This table shall contain Location-wise MA content information (audio file names, duration, etc.) and will be later used for data reporting purpose.'],['• The type of content shall be determined based on the naming convention for content name.',' The details on naming convention are available in 11.2.7.5.1 '],['• The index number will also be determined from content name if content is of type chapter, lesson or question. '],['• Based on the type of content and index number of the content, the record shall be created/modified in MA content tables (refer 10.1.5.310.1.5.39.1.4.3). ','These tables shall contain the MA Chapter, Lesson, Quiz content information. ','Data in these tables along with the data in mTraining tables shall be used to create the MA Course Structure file that shall be shared with IVR. '],['• Once the course content is completely populated in content tables, the state of course will be marked as ACTIVE in mTraining course table. '],['• In case of modification, it is possible to change following for a given Circle, LLC and Content Name: ','- Audio file name : ','-  Content ID ','- Content Duration',' - Answer option for a question '],['• If audio file name or answer option for a question has changed then it needs to be validated that same audio file name or answer option for a question has been received in CSV file for all existing LLCs in the system since the course structure is same across all LLCs.'],['• Every such modification is considered as a modification in course structure. ','Hence for every such modification the modificationDate field in mTraining course table should be updated.',' In order to do so, the course object will be retrieved and will be updated with same object in database. ','This will generate a new value for modificationDate field.',' This field will further serve as version of MA course in Get Course Version API (refer 3.3.4).']], 'sub-sections': []}]}]},
                     {'h2': '3.3 Service Provided to IVR ', 'pages': [], 'paragraphs':[['Mobile Academy exposes a service for data exchange between IVR and Mobile Academy module. ','The design description of the services interface APIs is given in following sections. ']], 'sub-sections': [
                             {'h3': '3.3.1 Get User Details ', 'pages': [], 'paragraphs':[['• MA shall expose Get User Details API for fetching the user details given the MSISDN, operator and circle from where call has originated.',' (refer [2], section 2.2.1) '],['• These parameters (circle, operator and MSIDN) shall go through data type validation and shall be used to further retrieve user details from FrontLineWorker service API (refer 8.3.1) '],['• The FrontLineWorker service shall return following user details to MA: ','o Whether FLW exists already  ','o Is default LLC applicable.',' This means circle for FLW is not available or is mapped to multiple LLCs so default LLC value shall be used to prompt FLW for entering her LLC preference.',' o Value of default LLC',' o Circle ',' o State level capping for MA usage ','o Deployment status in that state ','o Whether the FLW is white-listed '],['• MA needs to provide following parameters for an FLW to the IVR.',' Out of these parameters, the value of ‘circle’ provided by FrontLineWorker Service is used as is; other parameters are determined by MA (as described in the following sections):',' o Circle o LLC (refer section 3.3.1.1) ','o Max Allowed Usage (refer section 3.3.1.2)',' o Current Usage (refer section 3.3.1.3)',' o Max Allowed End Of Usage Prompt Limit (refer section 3.3.1.4) ','o End Of Usage Prompt Counter (refer section 3.3.1.5) ']], 'sub-sections': [
                                     {'h4': '3.3.1.1 Language Location Code Selection ', 'pages': [], 'paragraphs':[['• Given the MSISDN of the user, the LLC of the user shall be determined using the FrontLineWorker service API (refer 8.3.1) '],['• If neither LLC nor default LLC is received from FrontLineWorker Service then MA shall return DEFAULT_LANGUAGE_LOCATION_CODE to the IVR.  ','This code is used by IVR to determine the language in which the user should be prompted to enter her language preference. ']], 'sub-sections': []},
                                     {'h4': '3.3.1.2 Maximum Allowed Usage Determination ', 'pages': [], 'paragraphs':[['• The maximum allowed usage shall be filled based on the capping type configured in parameter CAPPING_TYPE (refer 11.1.2.3.1). '],['o If it is configured as ‘No Capping’, there will not be any usage limit for all users who dial MA long code. '],['o If it is configured to ‘National Capping’ then there will be a single cap for all Indian states for available free talk-time configured in NATIONAL_CAP_VALUE.'],['o If it is configured to ‘State-wise Capping’ then the capping will be as per the usage limit defined for geographical state of the user (refer 11.2.7.6.2). ']], 'sub-sections': []},
                                     {'h4': '3.3.1.3 Current Service Usage for MA User ', 'pages': [], 'paragraphs':[['This usage will be maintained by MA in FLW Usage table (refer section 10.1.5.4). ','These details will be populated while saving the call details for an FLW [Refer 3.3.7].'],['If lastAccessTime of an FLW in this table falls in previous months then - endOfUsagePromptCounter will be reset to zero - currentUsageInPulses will be reset to zero.']], 'sub-sections': []},
                                     {'h4': '3.3.1.4 Maximum number of End of Usage messages', 'pages': [], 'paragraphs':[['• This is determined from configuration parameter MAX_ALLOWED_END_OF_USAGE_PROMPT (refer 11.1.2.3.1).  '],['• This indicates the maximum number of times end-of-usage message can be played to the user. '],['• If the usage limit for the user exhausts during the call or in new call, end-of-usage message is played to her and a counter is maintained for number of times this message has been played to her. '],['• During subsequent calls, if number of times this message has been played to her is less than MAX_ALLOWED_END_OF_USAGE_PROMPT then this message is again played else the call is simply dropped.']], 'sub-sections': []},
                                     {'h4': '3.3.1.5 End of Usage Message Count ', 'pages': [], 'paragraphs':[['• This endOfUsagePromptCounter shall be retrieved from the MA in FLW Usage table (refer section 10.1.5.4). ','The counter is updated while saving the call details for an FLW. '],['• More details are available in section 3.3.7 ']], 'sub-sections': []},
                                     {'h4': '3.3.1.6 State-wise Service Deployment Status ', 'pages': [], 'paragraphs':[['• The list of Indian states where MA service is deployed will be maintained by Master Location Data module. '],['• When FLW service shall be invoked for getting the user details of an FLW, the service will also determine whether MA service is deployed in that state and will return the deployment status to MA. '],['• If the service is not deployed in FLW’s state, appropriate error message shall be returned to IVR (Refer FLW service 8.3.1). ']], 'sub-sections': []},
                                     {'h4': '3.3.1.7 FLW Whitelisting ', 'pages': [], 'paragraphs':[['• Once the state of FLW is determined, it will be responsibility of FLW module to check if the subscriber is white-listed in that state.'],['• If so, same information will be returned to MA while getting user details. '],['• If the user is not whitelisted, appropriate error message shall be returned to IVR. (Refer FLW service 8.3.1) ']], 'sub-sections': []}]},
                             {'h3': '3.3.2 Set Language Location Code of an MA Subscribe', 'pages': [], 'paragraphs':[['• MA shall expose Set User Language Location Code API for setting the LLC preference of a FLW (refer [2], section 2.2.7). '],['• The LLC and MSISDN received in the request will be passed to FrontLineWorker Service API (refer 8.3.2) for setting the Language Location Code preference of the user. ']], 'sub-sections': []},
                             {'h3': '3.3.3 Get Course Structure ', 'pages': [], 'paragraphs':[['• MA shall expose Get MA Course API to serve course structure to IVR (refer [2], section 2.2.2). '],['• The structure of course is independent of the Language Location Code of the user.',' On receiving the request, MA shall read the course object from mTraining tables (using mTraining module APIs).',' It shall check whether: ','o The course object exists in mTraining table using mTraining APIs.',' If the course object does not exist, error response shall be returned to IVR indicating that course is not yet populated. ','o State of course is ACTIVE. ','If state of course is not ACTIVE, error response shall be returned to IVR indicating that course upload is in progress. '],['• If state of course is ACTIVE, it shall read content names and content audio files names from course content tables. '],['• Having retrieved above course data, MA shall generate course structure in JSON format using GSON library.',' The JSON shall then be returned to IVR.']], 'sub-sections': []},
                             {'h3': '3.3.4 Get Course Version', 'pages': [], 'paragraphs':[['• MA shall expose Get MA Course Version API to serve the course version to IVR (refer [2], section 2.2.3). '],['• On receiving this request, MA shall check whether:',' o The course object exists in mTraining table using mTraining APIs. ','If the course object does not exist, error response shall be returned to IVR indicating that course is not yet populated.',' o State of course is ACTIVE. ','If state of course is not ACTIVE, error response shall be returned to IVR indicating that course upload is in progress. ','o If state of course is ACTIVE, then modificationDate parameter value (in seconds) in mTraining course object shall be returned to user as course version. ']], 'sub-sections': []},
                             {'h3': '3.3.5 Get Bookmark and Score ', 'pages': [], 'paragraphs':[['• MA shall expose Get Bookmark With Score API to get the bookmark of the user whose call is ongoing.',' (refer [2], section 2.2.4).  '],['• MA shall expose Get Bookmark With Score API to get the bookmark of the user whose call is ongoing. ','(refer [2], section 2.2.4).  '],['• On receiving the request, MA shall retrieve following information from mTraining bookmark table:',' o Actual bookmark. ','This will be stored in progress map against key bookmark_id ','o Scores by chapter.',' This refers to the scores achieved by user per chapter. ','This will also be stored in progress map with key being chapter no. '],['• A sample of progress map in mTraining Bookmark table is given below-']], 'sub-sections': []},
                             {'h3': '3.3.6 Save Bookmark and Score ', 'pages': [], 'paragraphs':[['• MA shall expose Save Bookmark With Score API to save the bookmark and chapter scores of a user.',' This will be invoked only after disconnect of the call(refer [2], section 2.2.5).'],['• The MSISDN of the user will be received in request and it will be validated using FLW service (refer 8.38.37.3) that MSISDN exists in FLW records. ','If MSISDN does not exist then appropriate error response shall be returned to the IVR. '],['• Each node in the course structure which can be bookmarked has a unique identifier which is already shared with IVR as part of MA course structure. ','Same identifier shall be sent by IVR in this request.  ','However, it will not be validated at MA whether bookmark is valid or not.',' Whatever is shared by IVR will be saved as it is with MA.  '],['• MA does not use this bookmark internally.',' It is solely for communicating the IVR the bookmark location in MA course. '],['• The scores per chapter will also be sent by IVR in this request. ','The bookmark as well as scores for the user shall be saved in progress map in mTraining bookmarks table.',' A sample of progress map is given in section 3.3.5. ']], 'sub-sections': []},
                             {'h3': '3.3.7 Save Call Details ', 'pages': [], 'paragraphs':[['• This API shall be invoked once the call gets disconnected.',' The IVR shall invoke this API and shall provide call related data and course content related logs in the Save Call Details request.',' (refer [2], section 2.2.6). '],['• The course content related logs will be in the form of list of details for each content file being listened to by the user. '],['• The data related to call shall be saved in Call Details table [Refer 10.1.5.5] while data related course shall be saved in Content logs table [Refer ] '],['• The data in both these tables will be used only for reporting purpose. '],['• A new record will be created in Call Details table whenever ‘Save Call Details’ shall be invoked and data shall be stored as follows in Call Details table:',' o callId – The identifier of the call. This will be sent by IVR in requestrequestrequest. ','o callStartTime – The start time of the call.',' This will be sent by IVR in request ','o callEndTime – The time when the call terminated. ','This will be sent by IVR. ','o circle – provided by IVR ','o operator – provided by IVR ','o msisdn – calling number of the user. ','The last 10 digits of the calling number received in request will be taken as MSISDN of the user.',' o flwId – given the calling number, FLW service shall return the flwId of the user. ','Same will be saved here. ','o callStatus – provided by IVR ','o callDisconnectReason – provided by IVR. '],['• A new record shall be created in content logs table for each content being listened to and shall be stored as follows : ','o callId – The identifier of the call.',' This will be same as one saved above in call details table.',' o contentName – the name of content being played.',' This will be sent by IVR after picking from MA course structure.',' o contentFile – the name of the content file being played.',' This will be sent by IVR after picking from MA course structure. ','o languageLocationCode – This will be determined from MSISDN of the user using FLW service.',' o startTime – This refers to the timestamp when the IVR started to play this content to the user.',' This is provided by IVR.',' o endTime- This refers to the timestamp when IVR stopped playing the content to the user either due to completion of audio file content or due to call disconnect. ','This is provided by IVR. ','o completionFlag – This flag indicates if the content being played to the user has been listened to completely. ','o courseStartTime – This is the time when user start taking MA course. ','This will be same as start time of chapter 1 lesson 1.',' If the user attempts chapter 1 lesson 1 multiple times then the timestamp whichever is older will be taken as course start time. ','This will also be saved in FLW Call Usage table.',' o courseEndTime – This is the time when user completed the MA course. ','This will be same as end time of chapter 11 question 4 provided completion flag is trutruetru for this content. ','If the course is not yet completed, then this field will not be populated. ','If the user attempts chapter 11 question 4 multiple times then timestamp which is newer will be taken as course end time. ','This will also be saved in FLW Call Usage table.',' o correctAnswerReceived – This field shall be significant only in case content type is question and shall indicate whether a particular question has been answered correctly by the user.',' This shall be further used in reporting to find score of a particular FLW for a chapter during a course attempt.',' This field is required in addition to scores by chapter being maintained for a user because scores by chapter gives latest score whereas reports generation needs all scores of a user in multiple course attempts. '],['• Besides following call logs will be saved only in FLW Usage table (refer 10.1.5.4 ): ','o lastAccessTime – time of last call of FLW to MA. ',' currentUsageInPulses – This refers to the talk time which the user has already consumed while taking MA course.',' This time will be accumulated at MA based on callDurationInPulses received from IVR for a particular call. ','reset to zero every month.',' o endOfUsagePromptCounter – This refers to number of times the End Of Usage prompt counter has been played to the user.',' The same is provided by IVR in totality in request. ']], 'sub-sections': []}]}]},
             {'h1': '4 Mobile Kunji Module ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '4.1 Overview ', 'pages': [], 'paragraphs':[['• FLW access the Mobile Kunji service by dialing an IVR long code and entering a 2 digit number of one of the MK cards. ','The deck of cards along with the IVR service communicates essential audio-visual information on pregnancy and newborn health.'],['• Mobile Kunji module stores MK service data such as location information, service usage details of all MK subscribers.'],['• Mobile Kunji module exposes an interface to IVR to fetch information necessary for it to provide Mobile Kunji service.  '],['• Following database entities are used by this module to store MK related information: ','o Configuration [Refer 10.1.6.1]',' o Content Data [Refer 10.1.6.2 ] ','o Call Detail data [Refer 10.1.6.3]',' o FLW Detail data [Refer 10.1.6.4] ']], 'sub-sections': []},
                     {'h2': '4.2 Events Consumed ', 'pages': [], 'paragraphs':[['Mobile Kunji module subscribes to receive success events for the following topics: ']], 'sub-sections': [
                             {'h3': '4.2.1 Content Data CSV Upload Success ', 'pages': [], 'paragraphs':[['• This event is raised by MDS, when MobileKunji Content metadata CSV file is uploaded successfully in ContentUploadCsv table.'],['• The event contains the list of ids of successfully uploaded records and name of the user who has uploaded the file'],['• Format of CSV file is specified in section 11.2.7.5.2 '],['• On receiving this event:',' o Mobilekunji reads records from ContentUploadCsv table one by one for processing. ','o Mobilekunji uses static methods provided by Utility module for CSV data validation and parsing (refer 9.2.2.1).',' o For each CSV record that passes validation, Mobile Kunji creates a record in ContentUpload entity.',' o If Validation of any CSV record fails or it’s mapping to ContentUpload entity fails or record is rejected during processing, then Mobile Kunji module shall create an error log entry in BulkUploadError entity with erroneous record details and error reason using API detailed in 9.2.1.1.',' o After the processing of all CSV uploaded records, Mobile Kunji shall update the CSV Upload summary in BullkUploadStatus entity using the API described in 9.2.1.2.']], 'sub-sections': []}]},
                     {'h2': '4.3 Services Provided to IVR ', 'pages': [], 'paragraphs':[['Mobile Kunji exposes a service for data exchange between IVR and Mobile Kunji module. ','The design description of the services interface APIs is given in following sections.']], 'sub-sections': [
                             {'h3': '4.3.1  Get User Details ', 'pages': [], 'paragraphs':[['• MK shall expose Get User Details API for fetching the user details given the MSISDN, operator and circle from where call has originated. ','(refer [2], section 3.2.1) '],['• These parameters (circle, operator and MSIDN) shall go through data type validation and shall be used to further retrieve user details from FrontLineWorker Service (refer 8.3.1) '],['• The FrontLineWorker service shall return following user details to MK: ','- Whether FLW exists already ',' - Is default LLC applicable. ','This means circle for FLW is not available or is mapped to multiple LLCs so default LLC value shall be used to prompt FLW for entering her LLC preference. ','- Value of default LLC ','- Circle ',' - State level capping for MK usage '],['• If FLW send isCreated as true i.e. FLW created by FronltLineWorker, MK update the record in FlwDetail if it exist or create a new record if it does not exist.'],['• If FLW send isCreated as false i.e. FLW exist in  FronltLineWorker entity, MK does not update FlwDetail entity.'],['•  MK needs to provide following parameters for an FLW to the IVR.',' Out of these parameters, the value of ‘circle’ provided by FrontLineWorker Service is used as is; other parameters are determined by MK (as described in the following sections): ','▪ Circle ','▪ Language Location Code (refer ) ','▪ Max Allowed Service Usage (refer 4.3.1.2) ','▪ Current Service Usage (refer 4.3.1.3) ','▪ Maximum number of End Of Usage messages (refer 4.3.1.4) ','▪ End Of Usage Prompt Counter (refer 4.3.1.5 ) ','▪ State Wise deployment status (refer 4.3.1.6) ','▪ WhiteListing status (refer 4.3.1.7) ']], 'sub-sections': [
                                     {'h4': '4.3.1.1 Language Location Code Selection ', 'pages': [], 'paragraphs':[['• UserProfileDetailsService API provided by FrontLineWorker is used to determine LLC of the user (refer 8.3.1). '],['• MK checks the “Is default LLC” flag returned by the FrontLineWorker API, if it true then MK sends defaultLanguageLocation code returned by the API to IVR. ','IVR shall then prompt the user to enter the Language Location Code. '],['• If flag is false, MK sends Language Location Code returned by FrontLineWorker to IVR. ']], 'sub-sections': []},
                                     {'h4': '4.3.1.2 Max Allowed Usage Determination ', 'pages': [], 'paragraphs':[['• The maximum allowed usage shall be filled based on the capping type configured in parameter CAPPING_TYPE. '],['• If it is configured to ‘No Capping’, there will not be any usage limit for a user who dials MK. '],['• If it is configured to ‘National Capping’ then there will be a single cap for all Indian states for available free talk-time configured in NATIONAL_CAP_VALUE. '],['• If it is configured to ‘State-wise Capping’ then the capping will be as per the usage limit defined for geographical state of the user (refer 11.2.7.6.1). ']], 'sub-sections': []},
                                     {'h4': '4.3.1.3 Current Service Usage Determination ', 'pages': [], 'paragraphs':[['• MK performs a lookup based on msisdn (provided by IVR) in FLWDetail  table (refer 10.1.6.4) and if the FLW record exists then, ','o If lastCallActivity month is same as the current month, then the retrieved currentUsage value is returned to IVR.',' o If the month is different, then the monthly service usage is reset to 0 and is returned to IVR. '],['• In case lookup fails, then MK sends DEFAULT_CURRENT_USAGE (0) to IVR. ']], 'sub-sections': []},
                                     {'h4': '4.3.1.4 Maximum number of End of Usage messages ', 'pages': [], 'paragraphs':[['• This is determined from configuration parameter MAX_ALLOWED_END_OF_USAGE_PROMPT (refer 11.1.2.3.2).  '],['• This indicates the maximum number of times end-of-usage message can be played to the user. ']], 'sub-sections': []},
                                     {'h4': '4.3.1.5 End of Usage Message Count ', 'pages': [], 'paragraphs':[['• MK performs a lookup based on msisdn (provided by IVR) in FLWDetail  table (refer 10.1.6.4) and if the FLW record exists then endOfUsagePrompt value is returned to IVR. '],['• If lookup fails, then MK sends DEFAULT_END_OF_USAGE_PROMT (value=0) to IVR. ']], 'sub-sections': []},
                                     {'h4': '4.3.1.6 State-wise Service Deployment Status ', 'pages': [], 'paragraphs':[['• UserProfileDetailsService API provided by FrontLineWorker is used to determine statewise deployment. '],['• FLW API throws and exception ServiceNotDeployedException and, in this case, MK rejects the call with failure response. '],['• Refer 8.3.1 for details. ']], 'sub-sections': []},
                                     {'h4': '4.3.1.7 Subscriber Whitelisting ', 'pages': [], 'paragraphs':[['• UserProfileDetailsService API provided by FrontLineWorker is used to determine whiteListing enablement.'],['• FLW API throws and exception FlwNotInWhiteListException and, in this case, MK reject the call with failure response. ','Refer 8.3.1 for details. ']], 'sub-sections': []}]},
                             {'h3': '4.3.2 Set Language Location Code ', 'pages': [], 'paragraphs':[['• MK shall expose Set User Language Location Code API for setting the LLC preference of a FLW (refer [2], section 3.2.3). '],['• The LLC and MSISDN received in the request will be passed to FrontLineWorker Service UserProfileDetailsService API (refer 8.3.2) for setting the Language Location Code preference of the user.']], 'sub-sections': []},
                             {'h3': '4.3.3 Save Call Details', 'pages': [], 'paragraphs':[['• MK receives save call details request from IVR (refer [2], section 3.2.2). '],['• It uses UserProfileDetailsService provided by FrontLineWorker (refer 8.3.1) to validate the operator value provided from IVR. '],['• API used : void validateOperator(String operatorCode) throws DataValidationException; '],['• In case of validation failure, MK sends an error response to IVR. '],['• In case of success, MK saves the call related data (provided by IVR) in CallDetail and FLWDetail entities.','o A new entry is created in CallDetail table for each ‘Save Call Details’ coming from IVR. ','o welcomeFlag, currentUsage and endOfPromtCounter are updated the FLWDetail record (corresponding to msisdn value in request)']], 'sub-sections': []}]}]},
             {'h1': '5 Kilkari Module', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '5.1 Overview ', 'pages': [], 'paragraphs':[['• Kilkari module supports the creation / deactivation of Beneficiary Subscription via IVR. '],['• It supports the creation and update of Beneficiary details and subscription via MCTS Bulk Upload procedure. '],['• Kilkari shall provide Service APIs (as per section 5.4) that shall be used by Kilkari Out-Bound Dialer Module (refer 6) for preparing OBDBDOBD target file and during CDR file processing.'],['• Following are the MDS Entities that Kilkari shall utilize:',' o Subscriber:',' This entity shall store the personal details of a Kilkari Beneficiary.',' It shall also contain a list of references to the Subscriptions, which belongs to the beneficiary. ',' o Subscription:',' This entity shall contain the details (like pack Name, status etc.) of Subscription for which beneficiary has subscribed. ','o SubscriptionMeasure: This entity contains a record for subscription’s transient information: ','status, weekNumber, messageNumber and a reference to the corresponding subscription record.',' This is needed for reporting purpose.',' o ContentUpload:',' This entity shall contain the Kilkari Content Metadata information and shall be used to send the language and content file name to IVR system. ','o Configuration:,',' This entity shall contain the configuration parameters relevant to Kilkari service.',' Refer 11.1.1.5 for configuration parameter details.',' o ActiverUsers: ','This entity shall contain the count of Active/PendingActivation subscriptions in the system.',' o Refer Section 10.1.7 for DB schema of the above mentioned MDS entities. ']], 'sub-sections': []},
                     {'h2': '5.2 Events Consumed ', 'pages': [], 'paragraphs':[['Kilkari subscribes to receive events for the following topics: ']], 'sub-sections': [
                             {'h3': '5.2.1 Successful Upload of Child MCTS data.', 'pages': [], 'paragraphs':[['• This event is raised by MDS, when Child MCTS data CSV file is uploaded successfully in ChildCsv table. '],['• The event contains the list of ids of successfully uploaded records and name of the user who has uploaded the file.',' Refer section 11.2 for details on Data Upload design '],['• Kilkari shall read the records from ChildCsv table one by one for processing.',' Refer 11.2.7.3.2 for format of Child MCTS data CSV.'],['• Kilkari shall use the static methods provided by Util Bundle, in section 9.2.2 for CSV data validation and parsing, to validate ChildCsv record and map it to Subscriber entity Validation rules are mentioned in 11.2.8.2 '],['• Kilkari shall also validate the location of the beneficiary provided in the CSVRecord using the Location Service provided by Masterdata Module (refer 7.3.1.1). '],['• If the validation passes and mapping is successful then, Kilkari shall ','o Create a new Subscription if the count of currently active subscriptions is less than the allowed value and there is no existing Subscription record for 72WeeksPack with Status as Active or PendingActivation having ','▪ msisdn matching the one in  CSVRecord. ▪ mctsId matching the one in CSVRecord. ','(Refer 5.3.2.1 on how to count and check against the number of currently active subscriptions in the system) ','o Create a new Subscriber if there is no existing Subscriber having  ','▪ msisdn matching the one in  CSVRecord.',' ▪ childMctsId matching the one in CSVRecord. ','o Update the Subscriber record(MSISDN, childMctsId, motherMctsId, Location, name and DOB)  if there is an existing record ',' ▪ Having childMctsId same as the one in CSVRecord.',' ▪ Having motherMctsId same as the one in CSVRecord.',' ▪ Having null or empty childMctsId and msisidn matching the one in CSVRecord . ','o Update an existing Subscription’s status as Deactivated, if in CSVRecord. ','▪ EntryType is Death i.e. child death is reported.',' ▪ DOB is modified (also create a new subscription in this case with new DOB) ','▪ motherMCTSid matches to the existing Subscription (having status as Active/PendingActivation), create new Subscription as per child DOB.',' o Reject the record, if Child Death is reported for a non-existing subscriber with reason as “Child death reported for Non Existing Subscriber”. '],['• If Validation of ChildCsv record fails or it’s mapping to Subscriber entity fails or record is rejected during processing , then Kilkari shall create an error log entry in BulkUploadError entity with erroneous record details and error reason using API detailed in 9.2.1.1. '],['• After the processing of all csv uploaded records, Kilkari shall update the csv Upload summary in BullkUploadStatus entity.',' Kilakri shall use the API detailed in 9.2.1.2. ']], 'sub-sections': []},
                             {'h3': '5.2.2 Successful Upload of Mother MCTS data. ', 'pages': [], 'paragraphs':[['• This event is raised by MDS, when Mother MCTS data CSV file is uploaded successfully in MotherCsv table.'],['• The event contains the list of ids of successfully uploaded records and name of the user who has uploaded the file. ','Refer section 11.2 for details on Data Upload design '],['• Kilkari shall read the records from MotherCsv table one by one for processing. ','Refer 11.2.7.3.1 for format of Mother MCTS data CSV '],['• Kilkari shall use the static methods provided by Util Bundle, in section 9.2.2, for CSV data validation and parsing to validate MotherCsv record and map it to Subscriber entity, Validation rules are mentioned in 11.2.8.1.'],['• Kilkari shall also validate the location of the beneficiary provided in the CSVRecord using the Location Service provided by Masterdata Module, refer section 7.3.1.1. '],['• If the validation passes and mapping is successful then, Kilkari shall',' o Create a new Subscription if the count of currently active subscriptions is less than the allowed value and there is no existing Subscription record for 48WeeksPack with Status as Active or PendingActivation having',' ▪ msisdn matching the one in  CSVRecord.',' ▪ mctsId matching the one in CSVRecord.',' (Refer 5.3.2.1 on how to count and check against the number of currently active subscriptions in the system) ','o Create a new Subscriber if there is no existing Subscriber having ',' ▪ msisdn matching the one in  CSVRecord. ',' ▪ motherMctsId matching the one in CSVRecord. o Update the Subscriber record (MSISDN, motherMCTSId, Location, name , age and LMP) if there is an existing record  ','▪ Having motherMctsId same as the one in CSVRecord.',' ▪ Having null or empty motherMctsId and MSISDN matching the one in CSVRecord',' o Update an existing Subscription’s status as Deactivated, if in  CSVRecord ','▪ Number of outcome is 0 i.e. stillbirth is reported ▪ EntryType is Death i.e. mother death is reported. ','▪ Abortion is not “none” i.e. abortion is reported. ','▪ LMP is modified (also create a new subscription in this case).',' o Reject the record, if MotherDeath/Abortion/StilBirth is reported for a non-existing subscriber with reason as “MotherDeath/Abortion/StilBirth reported for Non Existing Subscriber” '],['• If Validation of MotherCsv record fails or it’s mapping to Subscriber entity fails or record is rejected during processing,  then Kilkari shall create an error log entry in BulkUploadError entity with erroneous record details and error reason, using API detailed in 9.2.1.1.'],['• After the processing of all csv uploaded records, Kilkari shall update the csv Upload summary in BullkUploadStatus entity.',' Kilkari shall use the API detailed in 9.2.1.2. ']], 'sub-sections': []},
                             {'h3': '5.2.3 Successful Upload of Content Metadata', 'pages': [], 'paragraphs':[['• This event is raised by MDS, when Kilkari Content metadata CSV file is uploaded successfully in ContentUploadCsv table.'],['• The event contains the list of ids of successfully uploaded records and name of the user who has uploaded the file.',' Refer 11.2.7.5.3 for format of CSV file.'],['• Kilkari shall read the records from ContentUploadCsv table one by one for processing. '],['• Kilkari shall use the static methods provided by Util Bundle, in section 9.2.2, for CSV data validation and parsing to validate ContentUploadCsv record and map it to ContentUpload entity. ','(Validation rules are mentioned in 11.2.8).'],['• If the validation passes and mapping is successful then, Kilkari shall: ','o Find if there is an existing record in Circle entity corresponding to the circleCode value (present in the CSVRecord), using API provided by Master Location Data module. ',' o If found, then check if there is an existing record in LanguageLocationCode entity corresponding to circleCode and languageLocationCode values (present in the CSVRecord), using API provided in 7.3.2.2. ','o Reject the csvContent and log error in BulkUploadError entity with erroneous record details and error reason “circleCode Invalid” or “languageLocationCode invalid”, if either Circle or LanguageLocationCode record is not found as per previous steps. '],['• If Validation of ContentUploadCsv record fails or it’s mapping to ContentUpload entity fails or record is rejected during processing, then Kilkari shall create an error log entry in BulkUploadError entity with erroneous record details and error reason, using API detailed in 9.2.1.1. '],['• After the processing of all csv uploaded records, Kilkari shall update the csv Upload summary in BullkUploadStatus entity.',' Kilakri shall use the API detailed in 9.2.1.2. ']], 'sub-sections': []},
                             {'h3': '5.2.4 Scheduled Event for Deletion of Deactivated/Completed Kilkari Subscription Records', 'pages': [], 'paragraphs':[['Kilkari Module shall listenlistenschedule a cron job to thetheget a daily event, using Motech Scheduler Service, for deletion of Deactivated/Completed Kilkari Subscription records.   '],['OnOnKilkari shall listen to this event and Subscription records. '],['On receiving the event Kilkari shall '],['• Find the list of Distinct Subscribers from Subscription records having with status as Completed or Deactivated and modification date is 6 weeks older than the current date. '],['• Delete all the Subscriptions with status as Completed or Deactivated and where modification date is 6 weeks older than the current date. '],['• For each of the Subscribers found in earlier step check if there is no associated subscription, then delete that subscriber record as well. ']], 'sub-sections': []}]},
                     {'h2': '5.3 Service Provided to IVR ', 'pages': [], 'paragraphs':[['• Kilkari exposes following APIs to IVR System:',' o Get Subscriber details:',' To Fetch Subscriber details using UserDetailsService.',' o Create Subscription:',' To create new Subscription using subscriptionService. ','o Deactivate Subscription:',' To deactivate an existing Subscription using subscriptionService. ']], 'sub-sections': [
                             {'h3': '5.3.1 Get Subscriber Details', 'pages': [], 'paragraphs':[['• Kilkari shall expose Get Subscriber Details API, detailed in section 4.2.1 of [2], to be invoked by IVR to ','o Determine the language and location preference for a registered. ','See 5.3.1.1.  ','o Determine the language and location preference for an anonymous user. ','See 5.3.1.2.',' o Determine list of Active / PendingActivation Subscription pack names. ','See 5.3.1.3. ']], 'sub-sections': [
                                     {'h4': '5.3.1.1 Language Selection for a Registered User ', 'pages': [], 'paragraphs':[['• Kilkari shall first find the registered Subscriber record with MSISDN matching the calling number,','  o Then determine the languageLocationCode for the subscriber as the value of languageLocationCode field, if present in the record. ','o Else it shall determine the languageLocationCode using Subscriber’s State and District information using the LanguageLocationCode service. ','Refer section [7.3.2.1] ','o If languageLocationCode is not determined from Subscriber record or from its location information then Kilkari shall send failure response to IVR with HTTP Status code as “500- internal server error” with failure reason as “LanguageLocationCode not found for Subscriber’s state and district” ']], 'sub-sections': []},
                                     {'h4': '5.3.1.2 Language Selection for an Anonymous Kilkari Subscriber ', 'pages': [], 'paragraphs':[['• If user is not registered and then Kilkari shall use the CircleCode present in the API request. '],['• If the CircleCode is present in this API then Kilkari shall use API provided by  LanguageLocationCode Service (refer section [7.3.2.4]) to determine the unambiguous LanguageLocationCode corresponding to the Circle (corresponding to CircleCode).',' (If there is only one LanguageLocationCode corresponding to a CircleCode then only it is considered unambiguous). '],['• If CircleCode is present in API but LanguageLocationCode for its Circle is ambiguous, then ','o Kilkari shall determine the DefaultLanguageLocationCode value corresponding to the Circle (corresponding to CircleCode) using API detailed in [7.3.2.5].','  o IVR shall use this DefaultLanguageLocationCode to play language selection prompt to user. ','o User shall provide the LanguageLocationCode DTMF Input. ','o IVR shall then send the user selected LanguageLocationCode in Create Subscription Request API (section 5.3.2), which shall be saved in the Subscriber record. '],['• If CircleCode is Unknown in this API and DefaultLanguageLocation code for Circle is not determined in above step, then',' o Kilkari shall determine the LanguageLocationCode for language selection as National Default LanguageLocationCode.',' Refer section 11.1.2.3.3 for details on this configuration parameter. ','o IVR shall use this LanguageLocationCode to play language selection prompt to user.',' o User shall provide the LanguageLocationCode DTMF Input. ','o IVR shall send the user selected LanguageLocationCode in Create Subscription Request API (section 5.3.2), which shall be saved in the Subscriber record. ']], 'sub-sections': []},
                                     {'h4': '5.3.1.3 Determination of Active / PendingActivation subscription pack names ', 'pages': [], 'paragraphs':[['• Kilkari shall determine list of Active/PendingActivation subscription packs, if any for the Subscriber with MSISDN matching calling number.'],['• IVR shall deny new subscription, if Kilkari reports an existing Active/PendingActivation subscription for the pack corresponding to the LongCode dialed by user']], 'sub-sections': []}]},
                             {'h3': '5.3.2 Create Subscription ', 'pages': [], 'paragraphs':[['• Kilkari shall support the subscription creation for a new or an existing beneficiary through IVR long code.  '],['• Kilkari shall also expose the Create Subscription Request API, detailed in section 4.2.3 of [2],  to be invoked by IVR System to  ','o Create a new Subscriber with LMP/DOB as date of call (and MCTSId, name, age, location, as null), if there is no existing Subscriber record with MSISDN matching the calling number.',' o Update an existing Subscriber record (with LMP/DOB information as date of call,  mother & child MCTSId as null) in NMS database if MSISDN matches the calling number, but having no any corresponding Active/PendingActivation subscription pack matching the pack corresponding to dialed long code.',' o Create a new Subscription record in NMS database if there is no existing subscription record with MSISDN and SubscriptionPack (having status as Active/PendingActivation) which matches the calling number and pack corresponding to dialed long code. ']], 'sub-sections': [
                                     {'h4': '5.3.2.1 Count of Active Subscriptions', 'pages': [], 'paragraphs':[['• Kilkari shall maintain the count of Subscriptions with status as Active or PendingActivation'],['• If this count is equal or more than the value of configurable parameter NMS_KK_MAX_ALLOWED_ ACTIVE _BENEFICIARY_COUNT, any new subscription request shall be rejected. '],['• Implementation: ','o The total number of currently active Kilkari Subscriptions shall be stored in a table, refer 10.1.7.4, having only 1 row).',' o The value of this field shall be incremented (decremented) whenever a Kilkari subscription is created (deactivated/Completed).',' SQL UPDATE query shall be used to increment / decrement the value of this counter, so that the counter is incremented / decremented atomically. ','Atomic update shall ensure that value of active subscriptions count used by any node is consistent with the NMS database. ','o For each new subscription via CSV upload, the value of the total number of Kilkari subscribers shall be retrieved from DB if it exceeds NMS_KK_MAX_ALLOWED_ ACTIVE _BENEFICIARY_COUNT, the record (and all subsequent new subscription records in the CSV) shall be rejected. ','Kilkari shall also create an error log entry in BulkUploadError entity with CSV record details and error reason as “Active Subscription Count Exceeded”. ','o For each new subscription via IVR, the value of the total number of Kilkari subscribers shall be retrieved from DB if it exceeds NMS_KK_MAX_ALLOWED_ ACTIVE _BENEFICIARY_COUNT, the request shall be rejected.',' Kilkari shall respond the “create subscription API” request with “Internal server error” and failure reason as “Active Subscription Count Exceeded”','  o Parallel subscription requests (parallel CSV Uploads or IVR requests), may result in the total number of Kilkari subscribers exceeding NMS_KK_MAX_ALLOWED_ ACTIVE _BENEFICIARY_COUNT by a small number.',' This may be prevented by having some additional checks, however, since this is a rare scenario, these checks shall be omitted in order to avoid increasing code complexity. ']], 'sub-sections': []}]},
                             {'h3': '5.3.3 Deactivate Subscription ', 'pages': [], 'paragraphs':[['• Kilkari shall expose the “Deactivate Subscription API”, detailed in section 4.2.4 of [2], to allow the beneficiary to deactivate Subscription to his pack via IVR. '],['• Kilkari shall find the Subscription record corresponding to the SubscriptionId present in the “Deactivate Subscription API”. '],['• If found it shall change the status of the Subscription to Deactivated. '],['• If record is not found corresponding to the SubscriptionId, then Kilkari shall just return the HTTP OK status to the API invoker and capture a warning log for the same ']], 'sub-sections': []}]},
                     {'h2': '5.4 Service Provided to Kilkari OBD Module ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '5.4.1 Deactivate Subscription ', 'pages': [], 'paragraphs':[['• Signature: void deactivateSubscription(Long subscriptionId, DeactivationReason reason) ','• This API retrieves the Subscription record as per the subscriptionId, then it updates the status of this record as “Deactivated” with deactivationReason = reason. ',' For reason as “NUMBER_IN_DND”, Kilkari deactivates the subscription only if channel in the subscription record is “IVR”, ','• In case the record is not found for the subscriptionId, it just creates a Warning Log in the log file. ']], 'sub-sections': []},
                             {'h3': '5.4.2 Get Content File Name ', 'pages': [], 'paragraphs':[['• Signature: String getContentFileName(String contentName, Interger languageLocationCode)',' • This API retrieves Kilkari’s ContentUpload entity record for the given value of the contentName and languageLocationCode, and returns the content file name.  ','• If no record is found it shall return the value as null.']], 'sub-sections': []},
                             {'h3': '5.4.3 Get scheduled Subscriptions for OBD  ', 'pages': [], 'paragraphs':[['• Signature: List<Subscription> getScheduledSubscriptions(); ','• This API shall return the list of Subscriptions for which a Kilkari OBD message shall be delivered on the current date. ','It shall also change the state of packs to “completed” if week number computed is for last week of pack. ','It shall also change the status of subscription from “pendingActivation” to “Active”.',' • Kilkari shall find Active/PendingActivation subscriptions that could be eligible for OBD message delivery  as below, (queries checks if today is day 1 or day 3 of week for any subscription with reference to its start date): ','o If NumberOfMessagePerWeek == 1, then “select * from subscription where (status = Active or pendingActivation) and ((startDate – Today’sDate) % 7 = 0)”.  ','o Else If NumberOfMessagePerWeek == 2, then “select * from subscription where  (status = (Active or pendingActivation) and ((startDate – Today’sDate) % 7 = 0 or 3)”.',' • For each subscription Kilkari shall compute  ','o The week number for which message is to be sent for a pack based on DOB or LMP as',' ▪ Start week number of 48 Weeks Pack +  (Today’s date - DOB) / 7','  ▪ Start week number of 72 Weeks Pack + (Today’s date – (LMP+3) ) / 7  ','o The message number for which message is to be sent for based on value of configuration parameter NumberOfMessagePerWeek. ','▪ Set message number = 1. ▪ If (NumberOfMessagePerWeek == 2) and ((startDate – Today’sDate) % 7 == 3) then set message number = 2. [This mean if today is day 4 (starting from 0 as first day) of week for a subscription, then message 2 shall be delivered].',' • If Week Number computed is greater than DurationOfPackInWeeks (72 or 48, respectively) then update the status to “Completed” and remove this subscription from list. ','• If Week Number computed is equal to DurationOfPackInWeeks (72 or 48, respectively) then update the status to “Completed”. ','• If Week Number computed is less than DurationOfPackInWeeks (72 or 48, respectively) and the status of a pack is pendingActivation then update it to “Active”. ','• Update the subscription in DB. ','• Update the WeekNumber and MessageNumber in KilkariSubscriptionMesasure entity (refer 10.1.7.3). ']], 'sub-sections': []}]}]},
             
            {'h1': '6 Kilkari Out-Bound Dialer Module ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '6.1 Overview ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '6.2 Events Consumed ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '6.2.1 Scheduled Event for preparation of OBD TargetFile', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '6.2.2 Scheduled Event for invoking OBD TargetFile notification API ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '6.2.2.1 Invocation of API provided by IVR ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]},
                     {'h2': '6.3 Service Provided to IVR ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '6.3.1 CDR File Notification ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '6.3.2 FileProcessedStatus Notification ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                     {'h2': '6.4 Assumption for Corner Cases:', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
             {'h1': '7 Master Location Data Module ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '7.1 Overview ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '7.2 Events Consumed ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '7.2.1 Event Handling ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                     {'h2': '7.3 Services ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '7.3.1 Location Data Service ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '7.3.1.1 Validate Location', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.2 Get State by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.3 Get District by Code', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.4 Get Taluka by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.5 Get Health Block by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.6 Get Health Facility by Code', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.7 Get Health Sub-Facility by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.8 Get Village by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.9 Get MA Capping by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.10 Get MK Capping by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.11 Get MK Service Deployed by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.12 Get MA Service Deployed by Code', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.13 Get KK Service Deployed by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.1.14 Get WhiteListing Status by Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '7.3.2 Language Location Code Service ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '7.3.2.1 Get Record by Location ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.2.2 Get Record By Circle Code And LangLocCode ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.2.3 Get LanguageLocationCode By Location ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.2.4 Get LanguageLocationCode By Circle Code ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '7.3.2.5 Get Default LanguageLocationCode By CircleCode ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]}]},
             {'h1': '8 Front Line Worker Module', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '8.1 Overview ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '8.2 Events Consumed ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '8.2.1 FLW CSV Upload Successful ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '8.2.1.1 Check Existence of the FLW', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '8.2.1.2 Update of FLW State ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '8.2.2 FLW Whitelist CSV Upload Successful ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                     {'h2': '8.3 Services ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '8.3.1 Process User Details ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '8.3.2 Update Language Location Code given the MSISDN ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '8.3.3 Validate Operator', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]},
             {'h1': '9 Utility Module', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '9.1 Overview ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '9.2 Services ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '9.2.1 Bulk Upload Log Service ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '9.2.1.1 Write Bulk Upload Error ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '9.2.1.2 Write Bulk Upload Status Summary ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '9.2.2 CSV Data Validation and Parsing ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '9.2.2.1 Validate and Parse data to (String/Integer/Long/Date/Boolean):', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]}]},
             {'h1': '10 Database Design', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '10.1 MA, MK, Kilkari Service Database ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '10.1.1 Master Location Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '10.1.2 Location – Circle – Language Mapping Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '10.1.3 FLW Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '10.1.4 WhiteListUsers', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '10.1.5 Mobile Academy Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '10.1.5.1 MA Configuration Data Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.5.2 MA Content Data Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.5.3 MA Course Content Data', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.5.4 FrontLineWorker Usage Table', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.5.5 Call Details Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.5.6 Content Logs table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '10.1.6 Mobile Kunji Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '10.1.6.1 MK Configuration Data Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.6.2 MK Content Data Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.6.3 Call Detail Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.6.4 FLW Detail Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '10.1.7 Kilkari Data', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '10.1.7.1 Kilkari Configuration Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.7.2 Kilkari Content Data Table ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.7.3 Kilkari Subscribers and Subscription Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.7.4 Kilkari Active Subscriptions Count ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '10.1.8 Utilities Data', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '10.1.8.1 Bulk Upload Error ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.8.2 Bulk Upload Status ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '10.1.9 KilkariObd Data', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '10.1.9.1 Outbound Call Detail ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.9.2 Outbound Call Request ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '10.1.9.3 Outbound Call Flow ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]},
                     {'h2': '10.2 Reporting Database Design ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '10.3 Transactional DB to Reporting DB ETL ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
             {'h1': '11 Operations & Maintenance ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '11.1 Configuration Management ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '11.1.1 System Configuration Parameters', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '11.1.1.1 Requirement', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '11.1.1.2 Design Approach ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                             {'h5': '11.1.1.2.1 Using MOTECH Configuration System', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                                     {'h4': '11.1.1.3 Mobile Academy Configuration Parameters', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '11.1.1.4 Mobile Kunji Configuration Parameters ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '11.1.1.5 KilkariObd Configuration Parameters ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                             {'h3': '11.1.2 Service Configuration Parameters', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '11.1.2.1 Requirements ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '11.1.2.2 Design Approach', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                             {'h5': '11.1.2.2.1 Using MOTECH Platform MDS DB Editor UI ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                                     {'h4': '11.1.2.3 Service Configuration Parameters ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                             {'h5': '11.1.2.3.1 Mobile Academy Service configuration Parameters ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.1.2.3.2 Mobile Kunji Service Configurable Parameters ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.1.2.3.3 Kilkari Service Configurable Parameters ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.1.2.3.4 KilkariObd Service Configurable Parameters', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]}]},
                     {'h2': '11.2 Data Upload', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '11.2.1 Requirements', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '11.2.2 Data Upload Design', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '11.2.3 CSV Upload Status Summary ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '11.2.4 Rejected CSV Records Log ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '11.2.5 CSV Upload Data History Tracking and Auditing ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '11.2.6 CSV Upload Transaction Management ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '11.2.7 Data File Formats ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                     {'h4': '11.2.7.1 Assumptions / Instructions for Data Upload ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                     {'h4': '11.2.7.2 Master Location Data CSV Files ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                             {'h5': '11.2.7.2.1 State Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.2 District Data', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.3 Taluka Data', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.4 Health Block Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.5 Health Facility Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.6 Health Sub Facility Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.7 Village Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.8 Circle Codes ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.9 Operator Codes  ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.2.10 Location, Circle and Language Mapping ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                                     {'h4': '11.2.7.3 MCTS Mother, Child Data CSV Files ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                             {'h5': '11.2.7.3.1 Mother Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                             {'h5': '11.2.7.3.2 Child Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                                    {'h4': '11.2.7.4 FLW Registration Data CSV Files ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                            {'h5': '11.2.7.4.1 FLW Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                                    {'h4': '11.2.7.5 Content Upload CSV Files ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                            {'h5': '11.2.7.5.1 Mobile Academy Content Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                            {'h5': '11.2.7.5.2 Mobile Kunji Content Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                            {'h5': '11.2.7.5.3 Kilkari Content Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                                    {'h4': '11.2.7.6 Capping and White-Listing Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                            {'h5': '11.2.7.6.1 MK State-Wise Capping Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                            {'h5': '11.2.7.6.2 MA State-Wise Capping Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                            {'h5': '11.2.7.6.3 FLW White-List Data ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]},
                            {'h3': '11.2.8 Data Validation', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                    {'h4': '11.2.8.1 MCTS Mother Data Validation Checks', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                    {'h4': '11.2.8.2 MCTS Child Data Validation Checks', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                    {'h4': '11.2.8.3 FLW Data Validation Checks ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                    {'h4': '11.2.8.4 A Data Validation Checks', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                    {'h4': '11.2.8.5 Kilkari Content Data Validation Checks ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                    {'h4': '11.2.8.6 Language Location Validation Checks', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]},
                     {'h2': '11.3 Reporting ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '11.4 Logging ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '11.4.1 MA, MK, Kilkari Logs  ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '11.4.2 Log Levels ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                    {'h2': '11.5 Exception Handling', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                            {'h3': '11.5.1 Design Options ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                    {'h4': '11.5.1.1 Using a Fault Barrier ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                                            {'h5': '11.5.1.1.1 Fault Handling', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                                            {'h5': '11.5.1.1.2 Contingency Handling ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]}]},
                    {'h2': '11.6 Security ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
             {'h1': '12 High Availability and Deployment ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                     {'h2': '12.1 Load Balancer Design ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '12.2 Database High Availability', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '12.3 Event Sub-System High Availability ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '12.3.1 Startup ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                             {'h3': '12.3.2  Master failure ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]},
                     {'h2': '12.4 Scheduler Sub-System High Availability ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '12.5 Reporting System High Availability ', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '12.6 Physical / Deployment View', 'pages': [], 'paragraphs':[[]], 'sub-sections': []},
                     {'h2': '12.7 Deployment Scripts ', 'pages': [], 'paragraphs':[[]], 'sub-sections': [
                             {'h3': '12.7.1 NMS Web Tier SW Installation', 'pages': [], 'paragraphs':[[]], 'sub-sections': []}]}]}]