# -*- coding: utf-8 -*-
"""
Created on Fri Jan 18 22:27:35 2019

@author: Lenovo
"""


sections = [{'h1': '1. Introduction', 'pages': [3], 'paragraphs':[], 'sub-sections': [
                {'h2': '1.1 Purpose ', 'pages': [3], 'paragraphs':[['The United States Center for Medicaid Services ("CMS") is running a Challenge (a series of TopCoder contests) through the NASA Center of Excellence for Collaborative Innovation (CoECI) and TopCoder to develop a web-based portal to support provider enrollment and screening.','Medicaid is a healthcare program that is funded by the US federal government and by individual states.','It is operated by individual states. The portal developed in this Challenge will allow medical service providers to register themselves in their individual state for compensation from the Medicaid program.','While this alone will provide a very welcome new procedure for providers, who must often fill out many paper forms today, the true goal of the portal will be to automatically screen potential providers for fraud risk before they are approved for Medicaid payments.','The portal will assign a potential level of risk to each registrant, and will do this by applying a suite of dynamic business rules.','Once a level of risk has been assigned, the registrants application will be sent to the appropriate sub-system for additional screening and processing.'],['To a give a sense of the scope of the overall project, the Community will need to accomplish the following in this series of contests:','• Integrate existing business rules for provider screening, and generate new ones.','This will require feedback from client subject matter experts (in a later contest, not this one). ','• Design and develop the web based portal ','• Design and develop the data validation and provider screening verification tiers ','• Ensure the design is compliant with the MITA 3.0 Architecture (will require an ESB based architecture) ','• Ensure the application complies with Section 508 requirements.']], 'sub-sections': []},
                {'h2': '1.2 Glossary', 'pages': [3], 'paragraphs':[], 'sub-sections': []}]},
            {'h1': '2. Logical Architecture ', 'pages': [4,5], 'paragraphs':[['The architecture is based on service-oriented approach with a decoupling of the web components (JSTL with Spring controllers) and the workflow components which specifically utilize an ESB (JBoss ESB) infrastructure with a workflow engine (Riftsaw).','  In addition, a rules engine (Drools) serves as the central repository of application rules that govern the overall processing. '],['The rules engine (Drools) contains the entire rules surround the questions and answers in order to determine which questions apply to any particular provider.','The Drools Guvnor (http://www.jboss.org/drools/drools-guvnor.html) will be used as the Rules Management System.'],['This architecture is aligned with the CMS MITA architecture.','Please refer to CMS_Challenge_PreDesign_Architecture_v20120307.doc for more details.'],['This application is designed to follow MITA architecture.','This application will be divided in three major tiers namely presentation, business and data access. ','Presentation layer consists of set of spring controllers and JSP+HTML pages which interacts with JBoss ESB.','JBoss ESB has support for SOAP Web Services implementations.','The spring controllers take user input, constructs SOAP request message and sends it to ESB SOAP Service layer.','Use input will be a form data or import files like PDFs, Scanned JPGs etc.'],['Business layer consists of Security, EJB and Utility implementations for interacting with data access layer and external systems.',' Utility classes are specifically used for implementing screening rules, capturing data from scanned copy of certificates and other. ','Business process is layer mainly responsible for performing the actual business logic which includes performing user authentication and authorization, CRUD operations on model entities, interacting with COTS, Legacy systems, vendor API and external systems etc.'],['Data Access layer responsible for performing CRUD operations against data stores.','It consists of COTS, Legacy Systems and Vendor API to perform operations on share data store and legacy storage.','All data store results will be modeled into respective entities and returned to calling business process layer methods. ']], 'sub-sections': [
                {'h2': '2.1 User Interface ', 'pages': [5], 'paragraphs':[['The frontend technology for this application was not strictly defined by the client, just a need for a simple, fast and easily maintainable solution was provided.','Therefore, usage of simple JSP pages with spring mvc framework is suggested as a core technology.','Spring controllers will be provided for user-driven requests’ handling.','Those handlers will communicate with the business level services (plain Java objects) as needed.','The layer of user interface controllers will simply redirect user actions to the business services layer with.','Proper mapping between controllers and JBoss ESB layer services will be designed.','No business actions should be performed in user interface handlers.','Dependency injection can be used to map handlers to the business level services. '],['The ESB layer level services will be provided during module architecture and the user interface handlers can be simply created on top of those services. '],['Asynchronous requests can easily handled using any javascript frameworks like jQuery.','The needed controllers can be also designed to handle that asynchronous request. ']], 'sub-sections': []},
                {'h2': '2.2 Data Access ', 'pages': [5], 'paragraphs':[['Data will be managed using data stores and legacy storage solely by the data access layer.','The application uses COTS, Legacy Systems and Vendor API to manage data against data store.','This layer is also responsible for caching query results, making use of DB indexes and views so as to improve the performance. '],['It is yet to known how COTS, Legacy Systems and Vendor API can be accessed.',' Time being it is assumed to use hibernate manage data in these data stores.','Some sort of caching is needed for improving performance when accessing the frequently used content. ']], 'sub-sections': []}]},
            {'h1': '3. Modular Architecture ', 'pages': [5,6,7], 'paragraphs':[['This application will have six modules:','MediCare Provider Enrollment Screening Portal Frontend Module','MediCare Provider Enrollment Screening Portal Services Module',' MediCare Provider Enrollment Screening Portal Miscellaneous Module',' MediCare Provider Enrollment Screening Portal Learning Trends Module','  MediCare Provider Enrollment Screening Rules Part1 Module',' MediCare Provider Enrollment Screening Rules Part2 Module',' MediCare Provider Enrollment Screening Rules Part3 Module']], 'sub-sections': [
                {'h2': '3.1 MediCare Provider Enrollment Screening Portal Frontend Module', 'pages': [6], 'paragraphs':[['This module will incorporate all the GUI screens and web-pages of the application.',' All the needed JSF 2.0 action handlers will be also implemented in this module.']], 'sub-sections': []},
                {'h2': '3.2 MediCare Provider Enrollment Screening Portal Services Module', 'pages': [6], 'paragraphs':[['This module architecture is responsible for defining the EJB and Web services']], 'sub-sections': []},
                {'h2': '3.3 MediCare Provider Enrollment Screening Portal Miscellaneous Module ', 'pages': [6], 'paragraphs':[['This module is responsible for implementing quartz jobs, capturing fingerprints, extracting signature and other profile information from scanned documents.']], 'sub-sections': []},
                {'h2': '3.4 MediCare Provider Enrollment Screening Portal Learning Trends Module', 'pages': [6], 'paragraphs':[['This module is responsible for implement the capability to learn observed negative trends factor back into screening rules so as to flag suspicious enrollments early in the screening process, ensuring the ability to detect and reduce/eliminate the incidence of false positives.','The application will remember previous rejected providers and reasons for rejection corresponding form fields.'],['Module architect is supposed to provide an effective algorithm to implement this. ']], 'sub-sections': []},
                {'h2': '3.5 Module MediCare Provider Enrollment Screening Rules Part1 Module ', 'pages': [6], 'paragraphs':[['This module is responsible for implementing Medicare screening rules for the following provider types',' • Audiologist ','• Certified Professional Midwife ','• Community Health Care Worker ','• Clinical Nurse Specialist ','• Certified Registered Nurse Anesthetist',' • Chiropractor ','• Podiatrist ','• Licensed Marriage and Family Therapist ','• Licensed Psychologist ']], 'sub-sections': []},
                {'h2': '3.6 MediCare Provider Enrollment Screening Rules Part2 Module', 'pages': [6,7], 'paragraphs':[['This module is responsible for implementing Medicare screening rules for the following provider types',' • Licensed Professional Clinical Counselor ','• Physician ','• Nurse Practitioner ','• Occupational Therapist ','• Physician Assistant ','• Private Duty Nurse ','• Physical Therapist ','• Speech Language Pathologist ','• Acupuncturist ']], 'sub-sections': []},
                {'h2': '3.7 MediCare Provider Enrollment Screening Rules Part3 Module ', 'pages': [7], 'paragraphs':[['This module is responsible for implementing Medicare screening rules for the following provider types ','• Allied Dental Professional ','• Certified Mental Health Rehab Prof-CPRP ','• Dentist ','• Hearing Aid Dispenser ','• Licensed Dietician or Licensed Nutritionist ','• Licensed Independent Clinical Social Worker ','• Nurse Midwife ','• Optometrist ']], 'sub-sections': []}]},
            {'h1': '4. Data Model ', 'pages': [7,8,9,10,11,12,13,14,15,16], 'paragraphs':[['The data model is provided in the TCUML.',' The ERD is also provided to indicate what data needs to be stored in the database.'],['The model has been provided in the TCUML Entity Class Diagram.'],['The User entity encompasses the user of this application, which as of now comprises the roles of Provider, Service Agent, Service Administrator and System Administrator.'],['The ProviderProfile entity contains basic provider information. It holds the following data. ','o LAST NAME - ',' o FIRST NAME  ','o MIDDLE NAME ','o NPI (Type 1 only) ',' o SOCIAL SECURITY NUMBER  ','o DATE OF BIRTH  ','o REQUESTED EFFECTIVE DATE ','o HIGHEST DEGREE EARNED -  Masters or  Doctorate',' o DATE DEGREE AWARDED','  o INDIVIDUAL PRACTITIONERS EMAIL ADDRESS  ','o Type of License/Certification o License/Certification Number ','o Original Issue Date',' o Renewal End Date ','o Issuing State ','o Individual Practitioners Specialty -  Physician Specialties, Dental Specialties, Nurse Practitioner Specialties, Private Duty Nurse Specialties, Psychology Specialty ','o Individual Practitioners Specialty Certifications – list of certifications',' ▪ Type of Specialty, ','▪ Certification Number, ','▪ Original Issue Date, ','▪ Renewal End Date, ','▪ Issuing State ','o Private Practice  ','o Alternate Mailing Addresses ','▪ ATTN',' ▪ ADDRESS',' ▪ CITY ','▪ STATE ','▪ ZIP CODE Remittance Advice - Address1/Address2/Address3 ','Reimbursement Check - Address1/Address2/Address3 ','Provider Correspondence - Address1/Address2/Address3',' Authorization Request Notice and Service Agreements- Address1/Address2/Address3 ','Credentials (Enrollment Status) - Address1/Address2/Address3 ','o Remittance Sequence - radio button and one of the following ','▪ Patient Account or Own Reference Number Order ','▪ DHS Transaction Control Number Order ','▪ Recipient MHCP ID Number Order ','o Group Affiliation Information - ','▪ GROUP NAME ',' ▪ GROUP ','▪ NPI/UMPI',' ▪ PRACTICE LOCATION ','▪ ADDRESS ','▪ CITY ','▪ STATE','  ▪ ZIP CODE',' o Disqualification Information',' ▪ Have you ever been convicted of a criminal offense related to involvement in any program under Medicare, Medicaid, Title XX, or Title XXI in Minnesota or any other state or jurisdiction since the inception of these programs? Yes/No, ','▪ Have you had civil money penalties or assessments imposed under section 1128A of the Social Security Act? Yes/No ','▪  Have you ever been excluded or terminated from participation in Medicare, Medicaid, Children’s Health Insurance Program (CHIP), or the Title XXI services program in Minnesota or any other state since the inception of these programs? YES/NO ▪','  o Contact Information',' ▪ CREDENTIALING CONTACT',' ▪  NAME ','▪ PHONE NUMBER ','▪  FAX NUMBER ','▪ EMAIL ADDRESS',' o Provider Statement ','▪ PROVIDER NAME ','▪ TITLE'],['The PrivatePractice entity contains provider practice information. ','It holds the following data     ','▪ Do you maintain your own private practice? – YES/No',' ▪ Primary Office Location Information ','▪ Are you employed and/or independently contracted by a group practice? - YES/NO ','▪ PRACTICE NAME (if applicable)','  ▪ GROUP NPI/UMPI (if applicable) ','▪ LOCATION ADDRESS (Practice location cannot be a PO Box) ','▪ CITY',' ▪  STATE',' ▪  ZIP CODE ',' ▪ COUNTY',' ▪ OFFICE PHONE NUMBER','  ▪ OFFICE FAX NUMBER ','▪ FEDERAL TAX ID NUMBER (if applicable and you are the owner of the practice) LEGAL NAME ACCORDING TO THE IRS (do not abbreviate)',' ▪ MINNESOTA TAX ID (if applicable and you are the owner of the practice) FISCAL YEAR END (default is 12/31)'],['AuditRecord contains user action data'],['The Enrollment entity contains provider practice information.',' It holds the following data','  • Enrollment Start Date ','• Enrollment End Date',' • Denial reason',' • Appeal data '],['The License entity contains provider license information. ','It holds the following data','  • Description ','• License issue date ','• Original issue date',' • Renewal end date',' • Issuing US state '],['The GroupAffiliation entity contains provider affiliation information.',' It contains the group name, NPI and address information. '],['The Address entity contains address information. ','It contains location, state, city, country and zipcode information. '],['Role is a lookup entity is used to contain user roles. ','Following user roles are supported ','• Provider ','• Service Agent',' • Service Administrator ','• System Administrator '],['EnrollmentStatus is a lookup entity. ','It represents the enrollment status.',' Following enrollment status will be supported ','• Pending ','• Denied ','• Approved '],['NotificationType is a lookup entity. ','It represents the type of notification to be sent to user',' • Denied ','• Approved '],['Permission is an ENUM.',' It contains the following enumerated values ','• ALLOW ','• DENY'],['UserPermission is used to hold user permission for particular action.',' It contains the following fields',' • Action – denotes the name of the action like create renewal, update renewal etc..',' • Permission -  it denotes the corresponding permission information.'],['FileFormat is a lookup entity.',' It represents the file format to which the enrollment data can be export.',' Presently PDF format need to be supported.'],['Specialty is a lookup entity. ','It represents the provider specialty code. ','Following specialty codes will be supported.'],['HelpItem this entity contains the help information about the application.',' It contains help title and description.'],['UserSearchCriteria contains user search criteria data used to search users.',' It contains the following criteria items. ','• User name ','• Provider type',' • Page number',' • Page size ','• Status – denotes enrollment status.',' • andOrFlag – if false,  returns search results satisfying any of the criteria term.',' • Full – if true, return search results with aggregate data loaded fully.'],['HelpSearchCriteria contains search criteria data used to search help items.',' It contains the following.',' • term – search term '],['SearchResult<T> is a utility entity used to return paged search results.',' It provides the requested page number and size.',' But also provides the total amount of items that qualify for the request (which may have been filtered) and also provides the total page count, which is a calculated value from the previous two values of the (total page/page size) rounded up. ','And of course, it provides the list of the requested items that satisfy the requested page.  '],['Audit and logging functionality will require to format and output strings with input/output information about data entities.','All data entities will provide a JSON version of their data, to be supplied in a toJSONString():String method.','This will standardize the logging of input and out information of entities','Jackson Java JSON-processor will be used to generate JSON version of entities. '],['Overall, these entities are geared to be used as data transport objects.',' They will be simple JavaBeans with getters and setters, and no intrinsic business validation in themselves.']], 'sub-sections': []},
            {'h1': '5. Conceptual Data Model (CDM) ', 'pages': [16,17,18,19,20], 'paragraphs':[['The conceptual data model of the data model in TCUML Entity Class Diagram is shown in the following table ']], 'sub-sections': []},
            {'h1': '6. Services', 'pages': [20,21], 'paragraphs':[['UserService: Provides the methods to manage a user.','This includes creating users, updating their roles and passwords, enabling or disabling them.','There are many methods to retrieve users.'],['ProviderProfileService: ','Provides the methods to manage provider profile. ','This includes creating, updating, deleting and retireving provider profiles.','SecurityService:',' This service provides a method to perform authentication and authorization. '],['ExportService:',' This service provides methods to export enrollment data into PDF format. '],['NPIRegistryService: ','This service provides methods to retrieve NPI data of providers given provider search term.  '],['ScreeningService: ','This service provides methods to manage screening and scheduling screening.'],['HelpService:',' A simple service used to get help files and the company’s about data.',' It also provides ability to save new help items.'],['EmailNotificationService: ','Provides a single method to sends notification emails to users. '],['LookupService:',' A simple service that gets lookup values for various lookup entities. ','Examples major program, category service, tribal code, specialty code etc..,'],['AuditService','This service provides methods which are used for auditing purpose. ','The SOAP service methods will use the methods of this service to perform auditing. '],['UserPermissionService: ','Provides the methods to manage a user permissions. ']], 'sub-sections': []},
            {'h1': '7. Process Architecture ', 'pages': [21,22,23,24,25,26,27,28], 'paragraphs':[], 'sub-sections': [
                {'h2': 'User Functionality', 'pages': [21,22,23], 'paragraphs':[[' Login o The user will be authenticated with the SecurityService.authenticate. ','This will use Oracle OAM to authenticate the user. ','If authentication fails, this would throw an exception.',' o If authentication is successful, then it returns session token which will be used for later communication. ','o The session timer is configurable at the level of the application server '],['Logout ','o The logout process does not require any cleanup, so it would simply invalidate the user session.',' o The expiration of the session timer would result in the application server also invalidating the session.'],['View Homepage',' o This navigation page would need to provide different options based on the role found in the session. ',' The JSF + JSP templates would be coded to check the user role and render the HTML based on this.'],['View Help',' o The help page provides a means of searching for documents based on free text search. ','o The search involves providing that search term, a page (1-based), and a page size.',' The page size dropdown would be configured at the controller layer level.',' o The HelpService.search is used.',' The search will attempt to find any match of the term in the text. ','o Matches are returned in a SearchResult object that contains the current page and size, the total amount of records, and the total amount of pages based on the input parameters, and this is used to render the paging navigation.',' And of course it returns the matching records for the requested page.',' The results are displayed. '],['Create Enrollment',' o The ProviderProfileService.create is used to create enrollment for user. ','It will set the enrollment.status to “new” '],['Edit Enrollment',' o The ProviderProfileService.update is used to update enrollment for user.. '],['View Enrollment',' o The ProviderProfileService.get is used to retrieve user entity with provider profile data. '],['Query Enrolment Status',' o The ProviderProfileService.get is used to get enrollment status. ','The ProviderProfile contains enrollment from which status can be retrieved. '],['Export Enrollment ','o The ExportService.export is used to export enrollment (provider profile) data into PDF form given user identifier. '],['Create Renewal ',' o The ProviderProfileService.update is used to create renewal of enrollment. ','o It will set the enrollment.status to “renewal” '],['Edit Renewal','  o The ProviderProfileService.update is used to create renewal of enrollment. ',' o Note it should not update the enrollment.status '],['View Renewal Enrollment ','o The ProviderProfileService.get is used to retrieve provider profile data. '],['Export Renewal Enrolment Data ','o The ExportService.export is used to export renewal enrollment (provider profile) data into PDF form given user identifier. '],['View User Profile ','o The UserService.get is used to retrieve user entity without provider profile data.'],['Update User Profile',' o The UserService.update is used to update user data.',' Note it will only update user entity i.e. it can update firstname, lastname, middle name and email.'],['Print Form ','o The UserService.get is used to retrieve user entity with provider profile data. ']], 'sub-sections': []},
                {'h2': 'Service Administrator Functionality ', 'pages': [23,24], 'paragraphs':[['Search Enrolments',' o The ProviderProfileService.search is used to retrieve user entity with provider profile data. ','o Matches are returned in a SearchResult object that contains the current page and size, the total amount of records, and the total amount of pages based on the input parameters, and this is used to render the paging navigation. ','And of course it returns the matching records for the requested page. ','The results are displayed.'],['Set Enrolment Status ','o The UserService.setEnrollmentStatus is used to set enrollment status.'],['Override Previously Denied Status',' o The UserService.setEnrollmentStatus is used to set enrollment status. ','o The UserService.appeal is used to set user appeal in enrollment entity. '],[' Initiate On-Demand Screening',' o The ScreeningService.performScreening is used to perform on demand screening of enrollment.',' i.e when the user submits enrollment for review ','o The ScreeningService.scheduleMediCareProgramDataChange is used to check MediCare program data changes. ',' i.e when screening rules changes.',' Handling screening rules will be done by different contests. '],['  Initiate Scheduled Screening ','o The ScreeningService.performScreening is used to perform on demand screening of enrollments. '],[' Initiate Re-Validation',' o The ScreeningService.performScreeningById is used to perform on revalidation given enrollment id. '],['View Users ','o The UserService.search used to retrieve users. ','It will return first page with default page size set to 10.'],['Create User ','o The UserService.create used to create username and password at ORACLE OAM',' o It sets the user status to active on successful creation. '],['Update User ','o The UserService.update used to update user password at ORACLE OAM and user email, first name, last name and middle name at local application. '],['Delete User ','o The UserService.user used to delete user account from the application. ','o It won’t actually delete the user but It sets the user status to delete. '],['View Roles',' o The RoleService.getAll used to retrieve all roles. '],['Create Role ','o The RoleService.create used to create new role in to the application. '],['Update Role',' o The RoleService.update used to update role information.'],['Delete User ',' o The RoleService.delete used to delete role information. '],['Manage User Permissions ','o No Details are provided by client now. ','It is assumed it will be available during module architecture']], 'sub-sections': []},
                {'h2': 'Service Administrator Functionality ', 'pages': [24,25,26], 'paragraphs':[['Send Email Notifications ','o The notification will take place with the NotificationService.',' o The NotificationService.send is used to send emails to users. '],['Perform Logging ','o TC logging wrapper is used to perform logging '],['Perform Auditing ','o The AuditService.audit is used to perform auditing. ','It will store audit data into database.'],['Integrate With External Systems  ','o The POCs are proposed to check the new application will integrate with existing system nicely'],['Perform Automatic Screening',' o The actual screening is not in scope of the architecture. ','However it defines ScreeningService. ','scheduleMediCareProgramDataChange is used to changes to various external systems data.',' Concrete details about external systems will be available during module architecture contests. '],[' Learn Trends for Screening ','o Module architecture is proposed to handle this task.',' At this point the screening rules for providers are not available. ','After completing screening rules or data about screening rules is available then this module architecture can be run. '],['Generate Reports ','o The ExportService.export can be used to export the application (enrollment) data into PDF format. ',' o The TC PDF Builder component can be used for this purpose '],['Schedule Re-Validation',' o The ScreeningService.scheduleRevalidation can be used to schedule revalidation. '],['Schedule Screening ','o The ScreeningService.scheduleScreening can be used to schedule screening. '],['Integrate With MN-ITS Mail Box ','o Details about MN-ITS Mail Box is yet to be provided. ','It is expected that the downstream contests will handle this.'],['Change Application Language ','o In Spring MVC application, language can be changed easily by using org.springframework.web.servlet.i18n.SessionLocaleResolver '],['Pass DHS Audit',' o This process is done manually '],['Perform Background Check',' o This will be handled by screening module. ','ScreeningRules for enrollments are yet to be finalized.',' A concept contests are running for this. ',' o The UserService.performBackgroundCheck is used to perform this action '],['Verify Business Ownership o The UserService.verifyBusinessOwnership is used to perform this action.',' The actual business logic will be handled in screening rules modules.']], 'sub-sections': []},
                {'h2': '5.2 Persistence', 'pages': [26], 'paragraphs':[['Hibernate (JPA version) will be used for managing data against data stores.',' Making use of annotation based dependency injection in EJBs, EntityManager will be injected in the Webservices and EJBs. '],['So hibernate persistence should be hidden behind the services.',' The following approaches (both) should be implemented for Hibernate persistence.',' An EJB Web service session will be consumed by external systems (To be used by other US States along with Minnesota).'],['A local EJB session facade is created to wrap Hibernate persistence. ','The session facade provides adapter logic to map Hibernate entity POJOs to Service Data Objects and back.',' An integration developer can then use an EJB import to invoke the session facade, and invoke it in a tightly coupled fashion with corresponding Qualities of Service (QoS). '],['An EJB Web service session facade is created to wrap Hibernate persistence.',' An integration developer can then use a Web service import to invoke the Web service for persistence.',' This gets around having to build POJO to SDO converters, since at the current time SCA only uses SDO for data types. ']], 'sub-sections': []},
                {'h2': '5.3 Concurrency and Transaction Management', 'pages': [26], 'paragraphs':[['Any database operations must be transactional safe.',' Transaction will be managed using EJB declarative transactional control by the container.']], 'sub-sections': []},
                {'h2': '5.4 Threading ', 'pages': [26], 'paragraphs':[['The application will be effectively thread-safe. ','The entities being persisted wont change during a persistence operation. ']], 'sub-sections': []},
                {'h2': '5.5 Configuration ', 'pages': [26,27], 'paragraphs':[['The front-end layer of the application can use injection for configuration with the use of Spring. ','For backend layers like we EJB, JBossWS spring should not be used for configurations, since it is not required. '],['The configuration of the SMTP server and the database will need to be referenced to JBoss JNDI settings. ','Here are examples of this: '],['Database <bean id="#datasourceName#" class="org.springframework.jndi.JndiObjectFactoryBean">    <property name="jndiName"><value>jdbc/#JBoss_DataSource_Alias#</value></property>   </bean>        Mail      <bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">   <property name="jndiName"><value>java:comp/env/#MailSessionName#</value></property>      </bean> '],['value of instances of JndiObjectFactoryBean should come from JBoss settings. ']], 'sub-sections': []},
                {'h2': '5.6 Email Notifications ', 'pages': [27], 'paragraphs':[['JavaMail will be used to send email notification.',' Spring Velocity is used to get separate email templates for each notification type. '],['The following shows configuration for setting up velocity templates. '],[' <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">     <property name="resourceLoaderPath"><value>/WEB-INF/templates</value></property>   </bean>      <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">     <property name="host"><value>mail.xxx.org</value></property>     <property name="username"><value>xxx</value></property>     <property name="password"><value>xxx</value></property>   </bean>      <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage"/>      <bean id="managerTarget" class="com.xxx.MailSender">     <property name="mailSender"><ref bean="mailSender"/></property>     <property name="message"><ref bean="mailMessage"/></property>     <property name="velocityEngine"><ref bean="velocityEngine"/></property>       </bean> ']], 'sub-sections': []},
                {'h2': '5.7 Logging ', 'pages': [27,28], 'paragraphs':[['The application will log activity and exceptions using the LoggingWrapper. '],['It will log errors at Error level, and method entry/exit information at DEBUG level. '],['Specifically, logging will be performed as follows, if logging is turned on. ',' - Method entrance and exit will be logged with DEBUG level. ','o Entrance format: [Entering method {className.methodName}]',' o Exit format: [Exiting method {className.methodName}].',' Only do this if there are no exceptions. ','- Method request and response parameters will be logged with INFO level',' o Format for request parameters: [Input parameters[{request_parameter_name_1}:{ request_parameter_value_1}, {request_parameter_name_2}:{ request_parameter_value_2}, etc.)]]  ','o Format for the response: [Output parameter {response_value}] . ','Only do this if there are no exceptions and the return value is not void. ','o If a request or response parameter is complex, use its toString() method. If that is not implemented, then print its value using the same kind of name:value notation as above. ','If a child parameter is also complex, repeat this process recursively. ','- All exceptions will be logged at ERROR level, and automatically log inner exceptions as well. ',' o Format: Simply log the text of exception: ','[Error in method {className.methodName}: ','Details {error details}] ','o The stack trace of the error and a meaningful message. '],['In general, the order of the logging in a method should be as follows:  ','1. Method entry ','2. Log method entry',' 3. Log method input parameters',' 4. If error occurs, log it and skip to step7',' 5. Log method exit',' 6. If not void, log method output value ','7. Method exit '],['All entities will provide a JSON version of their data, to be supplied in a toJSONString():String method. ','This will standardize the logging of input and out information of entities. '],['Note the application should not log sensitive data like user password, medical data etc...' ]], 'sub-sections': []},
                {'h2': '5.8 JSP and Spring Controllers ', 'pages': [28], 'paragraphs':[['All frontend pages will be based on JSPs and, as required by the system architecture, will incorporate functionality provided by the JSTL standard tags.']], 'sub-sections': []},
                {'h2': '5.9 Spring Configuration Files ', 'pages': [28], 'paragraphs':[['The assembler will provide the configuration file (mainly for controllers) for web application deployment. ']], 'sub-sections': []},
                {'h2': '5.10 Input Validation ', 'pages': [28], 'paragraphs':[['The input validation not involving business logic should be configured in the validation XML; while the validation involving business logic should be done using spring validation framework.','  SOAP services should also have validation. ']], 'sub-sections': []},
                {'h2': '5.11 Paginated Results ', 'pages': [28], 'paragraphs':[['jQuery datatable can be used for showing paginated results. ']], 'sub-sections': []},
                {'h2': '5.12 Risks ', 'pages': [28], 'paragraphs':[['Not All technologies are known.',' It is bit stiff task on how well this application will be integrated with diverse external systems. ','A proof of concept should be run to assure the application will integrates nicely with existing external systems']], 'sub-sections': []}]},
            {'h1': '6 Security', 'pages': [28,29], 'paragraphs':[], 'sub-sections': [
                    {'h2': '6.1 Authentication ', 'pages': [28,29], 'paragraphs':[['The application will be integrated with authentication system which is built against the external directory (Oracle OAM). ','Oracle OAM return access token on successful authentication, this means that this application will rely on a session token that identifies the user. ','The web client, after successful authentication, will use the session token to perform additional operations. '],[' public static final String ms_resource = "//Example.com:80/login.jsp";              public static final String ms_protocol = "http";       public static final String ms_method = "GET";       public static final String ms_login = "jsmith";       public static final String ms_passwd = "j5m1th";       public String m_configLocation = "/oracle";              AccessClient ac = AccessClient.createDefaultInstance(m_configLocation,          AccessClient.CompatibilityMode.OAM_11G); ResourceRequest rrq = new ResourceRequest(ms_protocol, ms_resource,                ms_method);      Hashtable creds = new Hashtable();       creds.put("userid", ms_login);       creds.put("password", ms_passwd);       UserSession session = new UserSession(rrq, creds);       if(session.getStatus() == UserSession.LOGGEDIN) {        return session.getSessionToken()         }  ']], 'sub-sections': []},
                    {'h2': '6.2 Authorization ', 'pages': [29], 'paragraphs':[['Authorization will be using session token obtained at Authentication .',' The following shows how to authorize user for accessing a resource URL.   '],['public static final String ms_resource = "//Example.com:80/users/                create.jsp";        public String m_configLocation = "/oracle";       public static final String ms_protocol = "http";       ResourceRequest rrq = new ResourceRequest(ms_protocol, ms_resource,                     ms_method);              UserSession session = new UserSession(sessionToken)       if(session.isAuthorized(rrq))   return true; else     return false; '],['Useful resources:',' http://docs.oracle.com/cd/E23943_01/apirefs.1111/e22472/toc.htm http://docs.oracle.com/cd/E23943_01/doc.1111/e12491/as_api.htm '],['Displaying different views with different/relevant data to users will be done at frontend. ']], 'sub-sections': []},
                    {'h2': '6.3 Data Privacy ', 'pages': [29], 'paragraphs':[['There are no specific data privacy issues. ','No encryption or hashing of data is necessary in the data base. ','The username, password and other information is stored in the Oracle Access Manager (OAM).   '],['The access to the site itself will be done using HTTPS. ','This will be configured in the web server. ']], 'sub-sections': []},
                    {'h2': '6.4 Data Integrity ', 'pages': [29], 'paragraphs':[['User Input data needs to be validated before being passed to the back-end services. ','No specific data integrity issues exist. ','All save operations must be thread-safe and transactional. ']], 'sub-sections': []},
                    {'h2': '6.5 Data Migration ', 'pages': [29], 'paragraphs':[['None']], 'sub-sections': []}]},
            {'h1': '7 Deployment and Development Concerns ', 'pages': [29,30,31], 'paragraphs':[], 'sub-sections': [
                    {'h2': '7.1 Logical Deployment ', 'pages': [29], 'paragraphs':[['The application can be deployable in JBoss Application Server. ','The Frontend tier will incorporate HTMLs with JSP. ',' The application will be deployed as a single war file. ','The services will also be deployed on a JBoss AS, and use Hibernate to access the database.',' Spring is used to give necessary configuration. ']], 'sub-sections': []},
                    {'h2': '7.2 Building an Enterprise Service Bus using JBoss ESB', 'pages': [30], 'paragraphs':[['An ESB offers capabilities to connect new and existing software applications within and across enterprises, with a rich set of features enabling management and monitoring of interactions between applications '],['ESB offers the following features • First, is the ability for the ESB to interact with service requesters and service providers, in a variety of ways: by sending to and receiving messages from a persistent messaging backbone, particularly MQ, and being able to send and receive Web services request and response messages over HTTP and JMS, with support for standards like the Web Services Interoperability (WS-I) Basic Profile 1.1. We will focus initially on standards based messages using SOAP and XML, though supporting other message formats such as text and binary are important, too. • Next, is the ability to convert between different message and transport protocols, such as SOAP over HTTP to SOAP over JMS. • Then, we want to be able to transform XML messages using the popular transformation language XSLT. • Another basic feature is to be able to apply message mediations such as logging. Moreover, we very frequently have some type of context-based dynamic routing taking place. '],['Useful Resources: http://docs.jboss.org/jbossesb/docs/4.11/manuals/html/Getting_Started_Guide/index.html http://docs.jboss.org/jbossesb/docs/4.11/manuals/html/Services_Guide/index.html http://docs.jboss.org/jbossesb/docs/4.11/manuals/html/Programmers_Guide/index.html ']], 'sub-sections': []},
                    {'h2': '7.3 Metrics Requirements ', 'pages': [30], 'paragraphs':[['• The application does not propose any limits']], 'sub-sections': [
                            {'h3': '7.3.1 Page Performance Requirements ', 'pages': [30], 'paragraphs':[['• The portal will have 24x7x365 uptime with reasonably high level of availability. ','• All pages in the application should be loaded in 3 seconds or less seconds or less after the initial hit. ','• At its peak usage, the number of concurrent users should not exceed 100. ',' • The average number of users on the system at any one time is anticipated to be in between   25-30. ']], 'sub-sections': []}]},
                    {'h2': '7.4 Technologies', 'pages': [30,31], 'paragraphs':[], 'sub-sections': [
                            {'h3': '7.4.1 Software ', 'pages': [30], 'paragraphs':[['• Oracle RAC 11g ','• J2EE 6.0 ','• JAVA SDK 5.0.22 ','• Spring 3.0.5 ']], 'sub-sections': []},
                            {'h3': '7.4.2 Database ', 'pages': [30], 'paragraphs':[['• Oracle RAC 11g ']], 'sub-sections': []},
                            {'h3': '7.4.3 Web Server ', 'pages': [30], 'paragraphs':[], 'sub-sections': []},
                            {'h3': '7.4.4 Application Server ', 'pages': [30], 'paragraphs':[['• JBoss 5.1 ']], 'sub-sections': []},
                            {'h3': '7.4.5 Frameworks ', 'pages': [31], 'paragraphs':[['• Spring MVC ','• HornetQ 2.2 https://www.jboss.org/hornetq/ ','• JBoss ESB 4.11 http://www.jboss.org/jbossesb',' • Riftsaw 2.3.0 http://www.jboss.org/riftsaw ','• Hibernate 3.6.3 ','• Quartz  - http://quartz-scheduler.org/ ','• Drools - http://www.jboss.org/drools ']], 'sub-sections': []},
                            {'h3': '7.4.6 Unit Testing ', 'pages': [31], 'paragraphs':[['• JUnit-5']], 'sub-sections': []},
                            {'h3': '7.4.7 Operating System ', 'pages': [31], 'paragraphs':[['• CentOS 6 The application should support all latest versions of OS type as the application can be used by other US states.']], 'sub-sections': []},
                            {'h3': '7.4.8 TC Components ', 'pages': [31], 'paragraphs':[['• PDF Builder 1.0 ']], 'sub-sections': []},
                            {'h3': '7.4.9 Web technology ', 'pages': [31], 'paragraphs':[['• HTML/CSS',' • IE6/IE7/IE8 - latest version ','• FireFox - latest version',' • Safari - latest version ','• Chrome - latest version ']], 'sub-sections': []}]},
                    {'h2': '7.5 User Interface Implementation ', 'pages': [31], 'paragraphs':[], 'sub-sections': [
                            {'h3': '7.5.1 Prototype conversion ', 'pages': [31], 'paragraphs':[['The application will use JSTL.  ']], 'sub-sections': []},
                            {'h3': '7.5.2 Resolution ', 'pages': [31], 'paragraphs':[['The users can access the application though various computer configurations with different screen sizes, based on the specific client capabilities. ']], 'sub-sections': []}]}]},]















